name: Deploy to AWS S3
"on":
  push:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    outputs:
      coverage_passed: "${{ steps.check_coverage.outcome == 'success' }}"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install Dependencies
        run: npm install
      - name: Run Tests with Coverage
        run: npm test -- --coverage --coverageReporters="text-summary"
      - name: Check Coverage Threshold
        id: check_coverage
        run: >
          THRESHOLD=90

          STMT_COVERAGE=$(npx jest --coverage --coverageReporters="json-summary"
          --silent | jq '.total.statements.pct')

          if (( $(echo "$STMT_COVERAGE >= $THRESHOLD" | bc -l) )); then
            echo "Coverage meets the required threshold: $STMT_COVERAGE%"
          else
            echo "‚ùå Coverage is too low: $STMT_COVERAGE% (required: $THRESHOLD%)"
            exit 1
          fi
  deploy:
    needs: test
    if: needs.test.outputs.coverage_passed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: NodeJs Setup
        uses: actions/setup-node@v1
        with:
          node-version: 18
      - name: Dependency Installation
        run: npm install
      - name: App Build
        run: npm run build
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: "${{secrets.AWS_ACCESS_KEY_ID}}"
          aws-secret-access-key: "${{secrets.AWS_SECRET_ACCESS_KEY}}"
      - name: Deploy to AWS S3
        run: "aws s3 sync build s3://demotestbucket334 --delete"
