name: Deploy to AWS S3
on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    outputs:
      coverage_passed: ${{ steps.set_output.outputs.coverage_passed }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Run Tests with Coverage
        run: npm test -- --coverage --coverageReporters="json"

      - name: Check Coverage Threshold for Each File
        id: check_coverage
        run: |
          THRESHOLD=90
          COVERAGE_FILE=coverage/coverage-summary.json

          # Extract statement coverage for all files
          FILE_COVERAGES=$(jq '.["/absolute/path/to/project"].statements.pct' $COVERAGE_FILE)

          echo "Checking individual file coverages..."
          echo "$FILE_COVERAGES"

          ALL_PASSED=true

          # Loop through each file's coverage percentage
          for pct in $FILE_COVERAGES; do
            if (( $(echo "$pct < $THRESHOLD" | bc -l) )); then
              echo "❌ A file has coverage below $THRESHOLD%: $pct%"
              ALL_PASSED=false
            fi
          done

          if [ "$ALL_PASSED" = true ]; then
            echo "✅ All files meet the required coverage threshold!"
            echo "coverage_passed=true" >> $GITHUB_ENV
          else
            echo "❌ Some files do not meet the required threshold!"
            exit 1
          fi

      - name: Set Output Variable
        id: set_output
        run: echo "coverage_passed=${{ env.coverage_passed }}" >> $GITHUB_OUTPUT

  deploy:
    needs: test
    if: needs.test.outputs.coverage_passed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Build Application
        run: npm run build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 # Set the correct AWS region

      - name: Deploy to AWS S3
        run: aws s3 sync build s3://demotestbucket334 --delete
